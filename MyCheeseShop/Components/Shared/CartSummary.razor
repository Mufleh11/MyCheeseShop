@page "/cart"
@inject ShoppingCart ShoppingCart
@inject ProtectedSessionStorage ProtectedSessionStorage
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using MyCheeseShop.Components.Pages
@using MyCheeseShop.Model
@inject NavigationManager NavigationManager


<div>
    <table class="table table-hover">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Price</th>
                <th scope="col">Quantity</th>
                <th scope="col">Total</th>
                <th scope="col"></th>
                 @if (IsEditable)
                {
                    <th scope="col">Actions</th>
                } 
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ShoppingCart.GetItems())
            {
                <tr>
                    <td scope="col">@item.Cheese.Name</td>
                    <td scope="col">@item.Cheese.Price.ToString("C")</td>
                    <td scope="col">@((item.Quantity*100))g</td>
                    <td scope="col">@item.Total.ToString("C")</td>


                    <td scope="col">
                       <button class="btn btn-info mt-1 mt-md-1" @onclick="() => IncreaseQuantity(item)">Add</button>
                       <button class="btn btn-info mt-1 mt-md-1" @onclick="() => DecreaseQuantity(item)">Decrease</button>
                       <button class="btn btn-info mt-1 mt-md-1" @onclick="() => RemoveItem(item)">Remove</button>
                       
                    </td>
                </tr>
            }


        </tbody>
    </table>
    @if (ShoppingCart.Count() == 0)
    {
        <h3>Shopping Cart</h3>
        <p>Your cart is empty</p>
        <div>
            <button @onclick="GoToStore" class="btn btn-outline-primary">Back to cheeses</button>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-between">
            
            <div>
                <a @onclick="GoToCheckout" class="btn btn-outline-primary">Checkout</a>
            </div>
        </div>

        @*  <CartSummary IsEditable="true"/>  *@
    }
    </div>



@code 
{
    [Parameter]
    public bool IsEditable { get; set; } = false;

    protected override void OnInitialized()
    {
        ShoppingCart.OnCartUpdated += async () => await CartUpdated();
    }

    private async Task CartUpdated()
    {
        StateHasChanged();
        await ProtectedSessionStorage.SetAsync("cart", ShoppingCart.GetItems());
    }

    private void RemoveItem(CartItem item)
    {
        ShoppingCart.RemoveItem(item.Cheese);
    }

    private void IncreaseQuantity(CartItem item)
    {
        ShoppingCart.AddItem(item.Cheese, 1);
    }

    private void DecreaseQuantity(CartItem item)
    {
        ShoppingCart.DecreaseItem(item.Cheese, 1);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        StateHasChanged();
    }

    private void GoToStore()
    {
        NavigationManager.NavigateTo("/");
    }
    private void GoToCheckout()
    {
        NavigationManager.NavigateTo("/checkout");
    }
}